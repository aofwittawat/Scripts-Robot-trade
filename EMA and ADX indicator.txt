// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© aofwittawat

//@version=5
indicator("EMA_and_Adx_v1", overlay=true)

//User input
ema_len = input.int(title="EMA length", defval= 18 )
adxlen  = input.int(title="ADX Smoothing", defval= 25)
dilen   = input.int(title="DI Length", defval =25)
ADXlower = input.float(title = "Lower level", defval = 10)
ADXupper = input.float(title = "Upper level", defval = 20)
ADXuse  = input.bool(title = "USE ADX or not?", defval = true) 

//Get EMA and ADX
ema             = ta.ema(close, ema_len)
dirmov(len) =>
	up          = ta.change(high)
	down        = -ta.change(low)
	plusDM      = na(up) ? na : (up > down and up > 0 ? up : 0)
	minusDM     = na(down) ? na : (down > up and down > 0 ? down : 0)
	truerange   = ta.rma(ta.tr, len)
	plus        = fixnan(100 * ta.rma(plusDM, len) / truerange)
	minus       = fixnan(100 * ta.rma(minusDM, len) / truerange)
	[plus, minus]
adx_sig(dilen, adxlen) =>
	[plus, minus] = dirmov(dilen)
	sum = plus + minus
	adx = 100 * ta.rma(math.abs(plus - minus) / (sum == 0 ? 1 : sum), adxlen)
adx = adx_sig(dilen, adxlen)

// Check filter
readyTotrade = not na(ema) and not na(adx)
var int inTrade = 0

// Get criteria
validLong = false
validShort = false
if ADXuse 
    validLong       := (close > ema) and (adx >=ADXlower and adx <= ADXupper) and inTrade == 0
    validShort      := (close < ema) and (adx >=ADXlower and adx <= ADXupper) and inTrade == 0
else
    validLong   := close > ema and inTrade == 0
    validShort  := close < ema and inTrade == 0

//Check order
if (validLong or validShort) and inTrade == 0
    inTrade := validLong ? 1 : -1
if inTrade == 1
    if close < ema
        inTrade := 0
if inTrade == -1
    if close > ema
        inTrade := 0
        
// Exit
exitLong    = false
exitShort   = false
if inTrade[1] == 1 and inTrade == 0
    exitLong := true
if inTrade[1] == -1 and inTrade == 0
    exitShort := true

// Draw data 
plot(ema, title="EMA", linewidth =2)
plotshape(validLong, style=shape.triangleup, color=color.green, location=location.belowbar, text="Long", textcolor = color.white, title="Long")
plotshape(exitLong, style=shape.triangledown, color=color.red, location=location.abovebar, text="ExitLong", textcolor = color.white, title="ExitLong")
plotshape(validShort, style=shape.triangledown, color=color.red, location=location.abovebar, text="Short", textcolor = color.white, title="Short")
plotshape(exitShort, style=shape.triangleup, color=color.green, location=location.belowbar, text="ExitShort", textcolor = color.white, title="ExitShort")
bgcolor((inTrade == 1) ? color.new(color.green, 90) :na)
bgcolor((inTrade == -1)? color.new(color.red,90) :na)
